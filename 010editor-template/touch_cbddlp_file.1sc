//------------------------------------------------
//--- 010 Editor v2.0 Script File
//
//      File: TouchCbddlpFile.1sc
//   Authors: Rodrigo Alvarez
//   Version: 1.0
//   Purpose: Update the necessary fields of a cbdlfile (version=2)
//            to create an exposure test.
//  Category: Binary
//   History: 
//   1.0   1st pass
//------------------------------------------------
RequiresVersion( 4.0 );

// Define local variables
float base_layer_height = 0.050; // [mm] This value is default for all sets to create a rigid base.
float layer_height = 0.04; // [mm] This value will be overwritten by filename
char filename[512] = GetFileName();
int i; // General counter

// Get Layer Heigh from Filename
int match,size;
match = RegExSearch( filename, "[0-9]*um_", size );
if (match > 0) {
    local string tempStr="";
    for ( i = match; i < match + 2; i++){
        tempStr = tempStr + filename[i];
    }    layer_height = Atof( tempStr )/1000;
    /*
    Printf( "Match: %i\n", match);
    Printf( "size: %i\n", size);
    Printf( "tempStr: %s\n", tempStr);*/
} else {
    Printf( "Error: Could not find Layer height in file name.\n");
}

// Get Exposure step from filename (Vestigial but may be rescued)
float exposure_step;
match = RegExSearch( filename, "2-20s", size );
if( match > 0 ){
    exposure_step = 2;} else {
    exposure_step = 1;
}


Printf( "For file: %s\n", filename);
Printf( "Setting: layer_height=%f; exposureTimeSeconds=%f;\n", layer_height,exposure_step);

// - - - Set parameters in file - - - 

file.header.layerHeightmm = layer_height;
file.header.exposureTimeSeconds = exposure_step;

file.printParameters.liftingDistancemm = 0; // Confirm this is set to 0. Otherwise the build plate will lift between exposures, recirculate the resin, and fail the test

// Set z-distances for base
for( i = 0; i < file.header.numBottomLayers ; i++ ){
    file.layerDefinition[i].layerPositionZmm = base_layer_height * (i+1);
}

// Set z-distances for exposure layers
for( i = file.header.numBottomLayers; i < file.header.numLayers ; i++ ){
    file.layerDefinition[i].layerPositionZmm = base_layer_height*file.header.numBottomLayers + layer_height;
}

FileSave();FileClose();

